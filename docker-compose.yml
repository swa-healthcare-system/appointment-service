services:
  postgres:
    restart: unless-stopped
    image: postgres:10
    ports:
      - "5555:5432"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./init-scripts:/docker-entrypoint-initdb.d"
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=appointments"

  ktor-server:
    build: .
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=appointments
      - DB_USER=postgres
      - DB_PASSWORD=password
      - KAFKA_BROKER=kafka:9092
    command: [ "java", "-jar", "/app/ktor-server.jar" ]
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LOG4J_LOGGERS=kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=DEBUG,kafka.consumer.ConsumerFetcherThread=DEBUG,kafka.server.KafkaApis=DEBUG

volumes:
  postgres-data: