services:
  postgres:
    restart: unless-stopped
    image: postgres:10
    ports:
      - "5555:5432"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./init-scripts:/docker-entrypoint-initdb.d"
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=appointments"
    networks:
      - internal-net

  ktor-server:
    build: .
    depends_on:
      - postgres
    ports:
      - "8089:8089"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=appointments
      - DB_USER=postgres
      - DB_PASSWORD=password
      - KAFKA_BROKER=kafka:9092
      - EUREKA_URL=http://eureka-server:8761/eureka/v2
      - CONFIG_URL=http://config-server:8888
      - HOSTNAME=appointment-service
      - HOST_IP=host.docker.internal
      - SERVICE_PORT=8089
    labels:
      - "prometheus.port=8089"
      - "prometheus.path=/metrics"
    command: [ "java", "-jar", "/app/ktor-server.jar" ]
    restart: unless-stopped
    logging:
      driver: fluentd
      options:
        fluentd-address: "127.0.0.1:24227"
        fluentd-async-connect: "true"
        tag: appointment-service
    volumes:
      - ./../logs:/var/log/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal-net
      - shared-net
      - prometheus-network
      - logging-net

  fluentd-appointment:
    build:
      context: .
      dockerfile: ./fluentd/Dockerfile
    container_name: fluentd-appointment
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24227:24227"
    networks:
      - logging-net

volumes:
  postgres-data:

networks:
  internal-net:
    internal: true

  shared-net:
    external: true
    name: kafka-network

  prometheus-network:
    external: true
    name: prometheus-network

  logging-net:
    external: true
    name: logging-network